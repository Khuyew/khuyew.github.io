// –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
class KhuyewAI {
    constructor() {
        this.messagesContainer = document.getElementById('messagesContainer');
        this.userInput = document.getElementById('user-input');
        this.sendButton = document.getElementById('send-button');
        this.introCompleted = false;
        this.lastUserMessage = null;
        this.voiceRecognition = null;
        this.aiStreaming = null;
        this.isProcessing = false;
        
        this.init();
    }

    init() {
        if (!this.messagesContainer || !this.userInput || !this.sendButton) {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ DOM —ç–ª–µ–º–µ–Ω—Ç—ã');
            return;
        }

        this.aiStreaming = new AIStreaming(this.messagesContainer);
        this.voiceRecognition = new VoiceRecognition();
        
        this.loadChatHistory();
        initTheme();
        this.setupEventListeners();
        
        // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        this.userInput.focus();

        // –ó–∞–ø—É—Å–∫ –≤–≤–µ–¥–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏
        if (!this.messagesContainer.querySelector('.message')) {
            setTimeout(() => this.showIntro(), 500);
        }
    }

    setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ª–æ–≥–æ—Ç–∏–ø–∞
        const logo = document.querySelector('.logo');
        if (logo) {
            logo.addEventListener('click', (e) => {
                e.stopPropagation();
                this.clearChat();
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const themeToggle = document.getElementById('themeToggle');
        if (themeToggle) {
            themeToggle.addEventListener('click', (e) => {
                e.stopPropagation();
                toggleTheme();
            });
        }

        const generateImageBtn = document.getElementById('generateImageBtn');
        if (generateImageBtn) {
            generateImageBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                this.handleGenerateImage();
            });
        }

        const helpButton = document.getElementById('helpButton');
        if (helpButton) {
            helpButton.addEventListener('click', (e) => {
                e.stopPropagation();
                this.showHelp();
            });
        }

        const exportButton = document.getElementById('exportButton');
        if (exportButton) {
            exportButton.addEventListener('click', (e) => {
                e.stopPropagation();
                this.exportChat();
            });
        }

        const clearButton = document.getElementById('clearButton');
        if (clearButton) {
            clearButton.addEventListener('click', (e) => {
                e.stopPropagation();
                this.clearChat();
            });
        }

        const privacyLink = document.getElementById('privacyLink');
        if (privacyLink) {
            privacyLink.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                this.showPrivacyInfo();
            });
        }

        // –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        this.sendButton.addEventListener('click', () => this.sendMessage());
        
        this.userInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                this.sendMessage();
            }
        });

        // –ê–≤—Ç–æ—Ñ–æ–∫—É—Å –ø—Ä–∏ –∫–ª–∏–∫–µ –≤ –ª—é–±–æ–µ –º–µ—Å—Ç–æ —á–∞—Ç–∞
        this.messagesContainer.addEventListener('click', () => {
            this.userInput.focus();
        });
    }

    async sendMessage() {
        if (this.isProcessing) {
            console.log('–ó–∞–ø—Ä–æ—Å —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è');
            return;
        }

        const message = this.userInput.value.trim();
        if (message === '') return;
        
        this.isProcessing = true;
        this.sendButton.disabled = true;
        
        try {
            if (!this.introCompleted) {
                this.introCompleted = true;
                document.querySelector('.skip-intro')?.remove();
            }
            
            this.addUserMessage(message);
            this.userInput.value = '';
            
            const requestType = analyzeRequest(message);
            
            if (requestType === 'generate') {
                await this.aiStreaming.generateImage(message);
                this.removePendingAnimation();
            } else {
                // –¢–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
                try {
                    await this.aiStreaming.streamTextResponse(message);
                    this.removePendingAnimation();
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞:', error);
                    this.removePendingAnimation();
                    
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ –ø–µ—á–∞—Ç–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞
                    const errorElement = addMessage(this.messagesContainer, 
                        "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", 
                        false, true);
                }
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
            addMessage(this.messagesContainer, 
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", 
                false, true);
        } finally {
            this.isProcessing = false;
            this.sendButton.disabled = false;
            this.userInput.focus();
        }
    }

    addUserMessage(text) {
        const messageElement = addMessage(this.messagesContainer, text, true);
        messageElement.classList.add('pending');
        this.lastUserMessage = messageElement;
        return messageElement;
    }

    removePendingAnimation() {
        if (this.lastUserMessage) {
            this.lastUserMessage.classList.remove('pending');
            this.lastUserMessage = null;
        }
    }

    handleGenerateImage() {
        const prompt = this.userInput.value.trim();
        if (prompt) {
            this.sendMessage();
        } else {
            this.userInput.placeholder = "–û–ø–∏—à–∏—Ç–µ —á—Ç–æ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å...";
            this.userInput.focus();
        }
    }

    // –†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–µ—á–∞—Ç–∏ —Ç–µ–∫—Å—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö)
    async typeText(element, text, speed = 20) {
        return new Promise(resolve => {
            let i = 0;
            element.innerHTML = '';
            element.classList.add('ai-streaming');
            
            const type = () => {
                if (i < text.length) {
                    const char = text.charAt(i);
                    element.innerHTML = sanitizeHTML(text.substring(0, i + 1)) + '<span class="typing-cursor"></span>';
                    i++;
                    scrollToBottom(this.messagesContainer);
                    
                    const delay = char === '.' || char === '!' || char === '?' ? speed * 3 : speed;
                    setTimeout(type, delay);
                } else {
                    element.innerHTML = sanitizeHTML(text);
                    element.classList.remove('ai-streaming');
                    saveChatHistory(this.messagesContainer);
                    resolve();
                }
            };
            
            type();
        });
    }

    // –í–≤–µ–¥–µ–Ω–∏–µ –±–æ—Ç–∞
    async showIntro() {
        const introMessages = [
            "–ü—Ä–∏–≤–µ—Ç! –Ø Khuyew AI - –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫.",
            "–Ø —É–º–µ—é –æ–±—â–∞—Ç—å—Å—è –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –≤–∞—à–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é!",
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å.",
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É 'üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å' –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.",
            "–Ø –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—è —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ!"
        ];
        
        for (const message of introMessages) {
            if (this.introCompleted) break;
            
            const messageElement = document.createElement('div');
            messageElement.classList.add('message', 'ai-message');
            this.messagesContainer.appendChild(messageElement);
            
            await this.typeText(messageElement, message);
            await new Promise(resolve => setTimeout(resolve, 800));
        }
        
        if (!this.introCompleted) {
            this.createSkipButton();
        }
    }

    createSkipButton() {
        const skipButton = document.createElement('div');
        skipButton.classList.add('skip-intro');
        skipButton.textContent = '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–≤–µ–¥–µ–Ω–∏–µ';
        skipButton.addEventListener('click', () => this.skipIntro());
        this.messagesContainer.appendChild(skipButton);
        scrollToBottom(this.messagesContainer);
    }

    skipIntro() {
        this.introCompleted = true;
        document.querySelector('.skip-intro')?.remove();
        addMessage(this.messagesContainer, 
            '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!', false);
    }

    loadChatHistory() {
        const hasHistory = loadChatHistory(this.messagesContainer);
        if (hasHistory) {
            this.introCompleted = true;
        }
    }

    showHelp() {
        const helpMessage = "üéØ **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**\n\n‚Ä¢ **–û–±—â–µ–Ω–∏–µ**: –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å\n‚Ä¢ **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π**: '–Ω–∞—Ä–∏—Å—É–π –∫–æ—Ç–∞', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø–µ–π–∑–∞–∂'\n‚Ä¢ **–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥**: –Ω–∞–∂–º–∏—Ç–µ 'üé§ –ì–æ–ª–æ—Å' –∏ –≥–æ–≤–æ—Ä–∏—Ç–µ\n‚Ä¢ **–ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è**: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É 'üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å'";
        addMessage(this.messagesContainer, helpMessage, false);
    }

    exportChat() {
        exportChat(this.messagesContainer);
        addMessage(this.messagesContainer, '–ß–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ —Ñ–∞–π–ª!', false);
    }

    clearChat() {
        if (confirm('–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞?')) {
            this.messagesContainer.innerHTML = '';
            this.lastUserMessage = null;
            this.introCompleted = false;
            this.isProcessing = false;
            this.sendButton.disabled = false;
            this.aiStreaming.cancelStream();
            localStorage.removeItem('khuyew-chat-history');
            setTimeout(() => this.showIntro(), 500);
        }
    }

    showPrivacyInfo() {
        const privacyMessage = "üîí **–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:**\n\n‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ\n‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º\n‚Ä¢ –î–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É 'üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å'";
        addMessage(this.messagesContainer, privacyMessage, false);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    window.khuyewAI = new KhuyewAI();
});
